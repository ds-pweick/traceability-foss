name: "[BE][FE] Release"

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  JAVA_VERSION: 17

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'temurin'
          cache: 'maven'

      - name: Calculate Helm release version from CHANGELOG
        run: echo HELM_VERSION=$(cat charts/traceability-foss/CHANGELOG.md | sed -n 's/.*\[\([0-9]\+\.[0-9]\+\.[0-9]\+\)\].*/\1/p' | head -n 1) >> $GITHUB_ENV

      - name: Update Chart.yaml appVersion
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.appVersion = "${{ github.ref_name }}"' charts/traceability-foss/Chart.yaml

      - name: Update Chart.yaml version
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.version = "${{ env.HELM_VERSION }}"' charts/traceability-foss/Chart.yaml

      - name: Update frontend dependency version in Chart.yaml
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.dependencies[0].version = "${{ env.HELM_VERSION }}"' charts/traceability-foss/Chart.yaml

      - name: Update backend dependency version in Chart.yaml
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.dependencies[1].version = "${{ env.HELM_VERSION }}"' charts/traceability-foss/Chart.yaml

      - name: Update frontend version in frontend/Chart.yaml
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.version = "${{ env.HELM_VERSION }}"' charts/traceability-foss/charts/frontend/Chart.yaml

      - name: Update frontend appVersion in frontend/Chart.yaml
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.appVersion = "${{ github.ref_name }}"' charts/traceability-foss/charts/frontend/Chart.yaml

      - name: Update backend version in backend/Chart.yaml
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.version = "${{ env.HELM_VERSION }}"' charts/traceability-foss/charts/backend/Chart.yaml

      - name: Update backend appVersion in frontend/Chart.yaml
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i eval '.appVersion = "${{ github.ref_name }}"' charts/traceability-foss/charts/backend/Chart.yaml

      - name: Update the frontend package.json appVersion
        run: |
          sudo npm install -g json
          sudo json -I -f frontend/package.json -e "this.version='${{ github.ref_name }}'"

      - name: Prepare Helm release
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore(release): Prepare release for Helm version ${{ env.HELM_VERSION }}"
          branch: chore/prepare-helm-release-${{ env.HELM_VERSION }}
          base: main
          delete-branch: true
          title: Prepare Helm release for next version
          body: |
            This PR prepares the Helm chart release for version ${{ env.HELM_VERSION }}.
            Please check whether the Chart was updated correctly and that the CHANGELOG contains the relevant information
            for this release. Also, make sure that the values.yaml is correct before merging this PR.

      - name: Update OpenAPI spec
        run: mvn test -Dsurefire.failIfNoSpecifiedTests=false -Dtest=OpenApiDocumentationIT -Dopenapi-doc.generate=true

      - name: Determine release branch name
        id: determine-branch-name
        run: |
          name=$(git branch -a | grep -Eoi "release/${{ github.ref_name }}" || echo "")
          if [[ -z name ]]; then
            echo "No branch release/${{ github.ref_name }} or Release/${{ github.ref_name }} found, aborting..."
            exit 1
          fi
          echo "name=$name" >> "$GITHUB_OUTPUT"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: action/update-openapi-spec
          base: ${{ steps.determine-branch-name.outputs.name }}
          title: "chore(OpenAPI): updated OpenAPI spec"
          labels: automated
          delete-branch: true
          body: |
            This PR updates the OpenAPI spec. Please check whether the update was performed correctly. Unfortunately, this
            action causes a lot of nonsensical changes which should, however, be clearly recognizable as such.
            You can safely ignore these.

      - name: Get previous version
        run: echo PREVIOUS_VERSION=$(git tag | grep -E ^[0-9]+\\.[0-9]+\\.[0-9]+ | tail -2 | head -n +1) >> $GITHUB_ENV

      - name: Extract changelog text
        # See: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "CHANGELOG<<$EOF" >> $GITHUB_ENV
          sed -n -e '/## \[${{ github.ref_name }}\]/,/## \[/ p' CHANGELOG.md | head -n -1 | tail -n +2 >> $GITHUB_ENV
          echo **Full Changelog**: ${{ github.server_url }}/${{ github.repository }}/compare/${{ env.PREVIOUS_VERSION }}...${{ github.ref_name }} >> $GITHUB_ENV
          echo "$EOF" >> "$GITHUB_ENV"

      - name: Create Trace-X Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ env.CHANGELOG }}

  publish-to-swaggerhub:
    name: "Publish OpenAPI spec to Swaggerhub"
    permissions:
      contents: read
    needs:
      - release
    uses: ./.github/workflows/publish-swagger-hub.yml
    with:
      version: ${{ github.ref_name }}
    secrets: inherit
